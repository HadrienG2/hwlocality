name: 'Set up hwloc dependencies'
description: 'Make sure pkgconfig and hwloc are available'
inputs:
  hwloc-version:
    description: 'hwloc version to be installed'
    required: true
  hwloc-version-short:
    description: 'Shortened name of the hwloc version, used in download URLs'
    required: true
runs:
  using: "composite"
  steps:
    # TODO: Investigate why Ubuntu builds need liblzma-dev since 24.04.
    #       This is surprising since hwloc itself doesn't need it.
    - name: Force-install liblzma-dev (Ubuntu)
      if: runner.os == 'Linux'
      uses: Eeems-Org/apt-cache-action@v1
      with:
        packages: liblzma-dev

    - name: Cache hwloc install (Unices)
      if: runner.os != 'Windows'
      id: cache-deps-unix
      uses: actions/cache@v4
      with:
        path: ~/hwloc
        key: ${{ runner.os }}-deps-hwloc${{ inputs.hwloc-version }}

    - name: Cache all dependencies (Windows)
      if: runner.os == 'Windows'
      id: cache-deps-win
      uses: actions/cache@v4
      with:
        path: |
          ~/coreinfo
          ~/hwloc
          ~/pkgconfig
        key: ${{ runner.os }}-deps-pkgconfig0.28-1-hwloc${{ inputs.hwloc-version }}

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows' && steps.cache-deps-win.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
          $client = new-object System.Net.WebClient

          # Download/unpack sysinternals coreinfo, for system config probing
          $client.DownloadFile(
            "https://download.sysinternals.com/files/Coreinfo.zip",
            "coreinfo.zip"
          )
          mkdir "${env:USERPROFILE}/coreinfo"
          Expand-Archive -Path coreinfo.zip -DestinationPath "${env:USERPROFILE}/coreinfo"

          # Download/unpack pkgconfiglite as a windows pkgconfig impl
          # FIXME: Working around broken sourceforge downloads with a savage mirror
          $client.DownloadFile(
            "https://github.com/HadrienG2/hwlocality/files/11331438/pkg-config-lite-0.28-1_bin-win32.zip",
            "pkg-config.zip"
          )
          Expand-Archive -Path pkg-config.zip -DestinationPath .
          mv "pkg-config-lite-0.28-1" "${env:USERPROFILE}/pkgconfig"

          # Download/unpack hwloc binary release
          $client.DownloadFile(
            "https://download.open-mpi.org/release/hwloc/v${{ inputs.hwloc-version-short }}/hwloc-win64-build-${{ inputs.hwloc-version }}.zip",
            "hwloc.zip"
          )
          Expand-Archive -Path hwloc.zip -DestinationPath .
          $HWLOC_PREFIX = "${env:USERPROFILE}/hwloc"
          mv "hwloc-win64-build-${{ inputs.hwloc-version }}" "$HWLOC_PREFIX"

          # hwloc's pkgconfig follows unix convention of not adding a lib
          # prefix to library names, but unfortunately MSVC does not add one
          # either, so we must either patch the pkgconfig (as done for prefix
          # below) or add a non-lib-prefixed version of the library.
          cp "$HWLOC_PREFIX/lib/libhwloc.lib" "$HWLOC_PREFIX/lib/hwloc.lib"

          # hwloc's pkgconfig is also not relocatable, so we must relocate it
          # ourselves using the powershell equivalent of a sed
          $HWLOC_PKGCONFIG = "$HWLOC_PREFIX/lib/pkgconfig/hwloc.pc"
          echo "=== Initial pkg config ==="
          cat "$HWLOC_PKGCONFIG"
          echo "=========================="
          (Get-Content "$HWLOC_PKGCONFIG") |
            ForEach-Object { $_ -replace "^prefix=.*$", "prefix=$HWLOC_PREFIX" } |
            Set-Content "$HWLOC_PKGCONFIG"
          echo "=== Patched pkg config ==="
          cat "$HWLOC_PKGCONFIG"
          echo "=========================="

    - name: Install hwloc (macOS)
      if: runner.os == 'macOS' && steps.cache-deps-unix.outputs.cache-hit != 'true'
      shell: bash
      run: |
          curl -L "https://download.open-mpi.org/release/hwloc/v${{ inputs.hwloc-version-short }}/hwloc-${{ inputs.hwloc-version }}.tar.gz" | tar -xz
          cd hwloc-${{ inputs.hwloc-version }}
          ./configure --prefix="${HOME}/hwloc" --enable-debug
          make -j$(nproc)
          make install
          cd ..
          rm -rf ${{ inputs.hwloc-version }}

    - name: Install hwloc (other OSes)
      if: runner.os != 'Windows' && runner.os != 'macOS' && steps.cache-deps-unix.outputs.cache-hit != 'true'
      shell: bash
      run: |
          curl -L "https://download.open-mpi.org/release/hwloc/v${{ inputs.hwloc-version-short }}/hwloc-${{ inputs.hwloc-version }}.tar.gz" | tar -xz
          cd hwloc-${{ inputs.hwloc-version }}
          ./configure --prefix="${HOME}/hwloc" --enable-debug --enable-static
          make -j$(nproc)
          make install
          cd ..
          rm -rf ${{ inputs.hwloc-version }}

    - name: Bring dependencies into PATHs (Unices)
      if: runner.os != 'Windows'
      shell: bash
      run: |
          HWLOC_PREFIX="${HOME}/hwloc"
          echo "${HWLOC_PREFIX}/bin" >> "$GITHUB_PATH"
          echo "PKG_CONFIG_PATH=${HWLOC_PREFIX}/lib/pkgconfig:${PKG_CONFIG_PATH}" >> "$GITHUB_ENV"

    - name: Bring dependencies into PATHs (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
          $HWLOC_PREFIX = "${env:USERPROFILE}/hwloc"
          printf "%s\n" "${env:USERPROFILE}/coreinfo" >> ${env:GITHUB_PATH}
          printf "%s\n" "${env:USERPROFILE}/pkgconfig/bin" >> ${env:GITHUB_PATH}
          printf "%s\n%s\n" "$HWLOC_PREFIX/bin" "$HWLOC_PREFIX/lib" >> ${env:GITHUB_PATH}
          printf "%s\n" "PKG_CONFIG_PATH=$HWLOC_PREFIX/lib/pkgconfig;${env:PKG_CONFIG_PATH}" >> ${env:GITHUB_ENV}
